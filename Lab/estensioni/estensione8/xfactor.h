/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _XFACTOR_H_RPCGEN
#define _XFACTOR_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXNAMELEN 255
#define NUM_GIUDICI 12

typedef char *nametype;

struct classifica_entry {
	nametype nomeGiudice;
	int punteggioTot;
};
typedef struct classifica_entry classifica_entry;

struct classifica_giudici {
	classifica_entry classifica[NUM_GIUDICI];
};
typedef struct classifica_giudici classifica_giudici;

struct candidato_entry {
	nametype nomeCandidato;
	nametype nomeGiudice;
	char categoria;
	nametype nomeFile;
	char fase;
	int voti;
};
typedef struct candidato_entry candidato_entry;

typedef struct candidati_node *candidati_list;

struct candidati_node {
	candidato_entry entry;
	candidati_list next;
};
typedef struct candidati_node candidati_node;

struct input_espressione_voto {
	nametype nomeCandidato;
	char tipoOp;
};
typedef struct input_espressione_voto input_espressione_voto;

#define OPERATION 0x20000013
#define OPERATIONVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define CLASSIFICA_GIUDICI 1
extern  classifica_giudici * classifica_giudici_1(void *, CLIENT *);
extern  classifica_giudici * classifica_giudici_1_svc(void *, struct svc_req *);
#define ESPRIMI_VOTO 2
extern  int * esprimi_voto_1(input_espressione_voto *, CLIENT *);
extern  int * esprimi_voto_1_svc(input_espressione_voto *, struct svc_req *);
#define VISUALIZZA_CANDIDATI 3
extern  candidati_list * visualizza_candidati_1(void *, CLIENT *);
extern  candidati_list * visualizza_candidati_1_svc(void *, struct svc_req *);
#define AGGIUNGI_CANDIDATO 4
extern  int * aggiungi_candidato_1(candidato_entry *, CLIENT *);
extern  int * aggiungi_candidato_1_svc(candidato_entry *, struct svc_req *);
#define RIMUOVI_CANDIDATO 5
extern  int * rimuovi_candidato_1(nametype *, CLIENT *);
extern  int * rimuovi_candidato_1_svc(nametype *, struct svc_req *);
#define GET_CANDIDATI_OF_FASE 6
extern  candidati_list * get_candidati_of_fase_1(char *, CLIENT *);
extern  candidati_list * get_candidati_of_fase_1_svc(char *, struct svc_req *);
#define GET_CANDIDATI_OF_CATEGORIA 7
extern  candidati_list * get_candidati_of_categoria_1(char *, CLIENT *);
extern  candidati_list * get_candidati_of_categoria_1_svc(char *, struct svc_req *);
#define GET_CANDIDATI_WITH_VOTI 8
extern  candidati_list * get_candidati_with_voti_1(int *, CLIENT *);
extern  candidati_list * get_candidati_with_voti_1_svc(int *, struct svc_req *);
extern int operation_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define CLASSIFICA_GIUDICI 1
extern  classifica_giudici * classifica_giudici_1();
extern  classifica_giudici * classifica_giudici_1_svc();
#define ESPRIMI_VOTO 2
extern  int * esprimi_voto_1();
extern  int * esprimi_voto_1_svc();
#define VISUALIZZA_CANDIDATI 3
extern  candidati_list * visualizza_candidati_1();
extern  candidati_list * visualizza_candidati_1_svc();
#define AGGIUNGI_CANDIDATO 4
extern  int * aggiungi_candidato_1();
extern  int * aggiungi_candidato_1_svc();
#define RIMUOVI_CANDIDATO 5
extern  int * rimuovi_candidato_1();
extern  int * rimuovi_candidato_1_svc();
#define GET_CANDIDATI_OF_FASE 6
extern  candidati_list * get_candidati_of_fase_1();
extern  candidati_list * get_candidati_of_fase_1_svc();
#define GET_CANDIDATI_OF_CATEGORIA 7
extern  candidati_list * get_candidati_of_categoria_1();
extern  candidati_list * get_candidati_of_categoria_1_svc();
#define GET_CANDIDATI_WITH_VOTI 8
extern  candidati_list * get_candidati_with_voti_1();
extern  candidati_list * get_candidati_with_voti_1_svc();
extern int operation_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_nametype (XDR *, nametype*);
extern  bool_t xdr_classifica_entry (XDR *, classifica_entry*);
extern  bool_t xdr_classifica_giudici (XDR *, classifica_giudici*);
extern  bool_t xdr_candidato_entry (XDR *, candidato_entry*);
extern  bool_t xdr_candidati_list (XDR *, candidati_list*);
extern  bool_t xdr_candidati_node (XDR *, candidati_node*);
extern  bool_t xdr_input_espressione_voto (XDR *, input_espressione_voto*);

#else /* K&R C */
extern bool_t xdr_nametype ();
extern bool_t xdr_classifica_entry ();
extern bool_t xdr_classifica_giudici ();
extern bool_t xdr_candidato_entry ();
extern bool_t xdr_candidati_list ();
extern bool_t xdr_candidati_node ();
extern bool_t xdr_input_espressione_voto ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_XFACTOR_H_RPCGEN */
