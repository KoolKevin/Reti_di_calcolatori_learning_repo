/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _FATTOREX_H_RPCGEN
#define _FATTOREX_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define NUM_CANDIDATI 10
#define MAX_LENGTH 255

struct entry_classifica {
	char name[MAX_LENGTH];
	int num_voti;
};
typedef struct entry_classifica entry_classifica;

struct classifica_giudici {
	entry_classifica classifica[NUM_CANDIDATI];
};
typedef struct classifica_giudici classifica_giudici;

struct RIGA {
	char candidato[MAX_LENGTH];
	char giudice[MAX_LENGTH];
	char categoria;
	char nomeFile[MAX_LENGTH];
	char fase;
	int voti;
};
typedef struct RIGA RIGA;

struct MATRICE {
	RIGA riga[NUM_CANDIDATI];
};
typedef struct MATRICE MATRICE;

static MATRICE matrice;	//definisco la struttura dati nel file di header

#define FATTOREX 0x20000013
#define FATTOREXVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define VISUALIZZA_CLASSIFICA 1
extern  classifica_giudici * visualizza_classifica_1(void *, CLIENT *);
extern  classifica_giudici * visualizza_classifica_1_svc(void *, struct svc_req *);
#define AGGIUNGI_VOTO 2
extern  void * aggiungi_voto_1(char *, CLIENT *);
extern  void * aggiungi_voto_1_svc(char *, struct svc_req *);
#define RIMUOVI_VOTO 3
extern  void * rimuovi_voto_1(char *, CLIENT *);
extern  void * rimuovi_voto_1_svc(char *, struct svc_req *);
extern int fattorex_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define VISUALIZZA_CLASSIFICA 1
extern  classifica_giudici * visualizza_classifica_1();
extern  classifica_giudici * visualizza_classifica_1_svc();
#define AGGIUNGI_VOTO 2
extern  void * aggiungi_voto_1();
extern  void * aggiungi_voto_1_svc();
#define RIMUOVI_VOTO 3
extern  void * rimuovi_voto_1();
extern  void * rimuovi_voto_1_svc();
extern int fattorex_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_entry_classifica (XDR *, entry_classifica*);
extern  bool_t xdr_classifica_giudici (XDR *, classifica_giudici*);
extern  bool_t xdr_RIGA (XDR *, RIGA*);
extern  bool_t xdr_MATRICE (XDR *, MATRICE*);

#else /* K&R C */
extern bool_t xdr_entry_classifica ();
extern bool_t xdr_classifica_giudici ();
extern bool_t xdr_RIGA ();
extern bool_t xdr_MATRICE ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_FATTOREX_H_RPCGEN */
